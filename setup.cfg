# Copyright (c) 2015-2021 Adam Karpierz
# Licensed under the MIT License
# https://opensource.org/licenses/MIT

[metadata]
long_description = file: README.rst, CHANGES.rst
long_description_content_type = text/x-rst; charset=UTF-8
project_urls =
    Documentation=https://jtypespyjava.readthedocs.io/
    Source=https://github.com/karpierz/jtypes.pyjava
    Issues=https://github.com/karpierz/jtypes.pyjava/issues
license_files = LICENSE
keywords = jni, jvm, jtypes, jt, jpype, jep, pyjnius, jpy, javabridge,
           pyjava, jcc, py4j, jython, java, pythonjava, rubicon-java
platforms = any
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Natural Language :: Polish
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: Stackless
    Programming Language :: Java
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Software Development :: Libraries :: Java Libraries

[options]
python_requires = >=3.6.0,<4.0.0
setup_requires =
    setuptools>=42.0.2
install_requires =
    setuptools>=42.0.2
    jni>=1.0.0b17
    jvm>=0.5.0b2
namespace_packages = jt
packages = find:
package_dir =
    = src
    # jt.pyjava.tests = tests
zip_safe = False

[options.packages.find]
where = src

[options.package_data]
jt = pyjava.cfg

[options.extras_require]
doc =
    Sphinx>=3.2.1
    restructuredtext-lint>=1.3.1
test =

[sdist]
formats = zip

[bdist_wheel]
universal = False

[build_sphinx]
source-dir = docs
build-dir = build/docs
builder = html
all-files = True
warning-is-error = True

#
# Configuration(s) for tox
#

[tox:tox]
envlist = py{36,37,38,39}, coverage, docs
minversion = 3.13.2
requires =
    tox-venv>=0.4.0
    {[base]setup_requires}
skip_missing_interpreters = true

[base]
setup_requires =
    pip>=20.2.4
    setuptools>=50.3.0
    wheel>=0.35.1
packagesubdir = jt/pyjava

[testenv]
passenv = WINDIR
commands =
    {envpython} --version
    {envpython} -B -m tests {posargs}
extras = test
deps =
    {[base]setup_requires}
    {toxinidir}/../jni
    # {toxinidir}/../jvm
    {toxinidir}/../jvm/dist/jvm-0.5.0b2.zip

[testenv:prepare]
basepython = python3.7
skip_install = true
whitelist_externals =
    cmd
    .build
commands =
    cmd /C if exist .build.cmd .build.cmd

[testenv:coverage]
basepython = python3.7
commands =
    {envpython} -m coverage erase
    -{envpython} -B -m coverage run -m tests {posargs}
    {envpython} -m coverage report
    {envpython} -m coverage html
deps =
    {[testenv]deps}
    coverage>=5.3.0
    diff-cover>=4.0.1

[testenv:docs]
basepython = python3.7
commands =
   #{envpython} -m sphinx.apidoc -f {envsitepackagesdir}/{[base]packagesubdir}
    {envpython} setup.py -v build_sphinx -b html -E
    {envpython} setup.py -v build_sphinx -b linkcheck
    {envpython} setup.py -v build_sphinx -b doctest
extras = doc

[testenv:lint]
basepython = python3.7
commands =
    {envpython} -m flake8 {envsitepackagesdir}/{[base]packagesubdir}/
extras =
deps =
    {[testenv]deps}
    flake8>=3.8.4
    flake8-docstrings>=1.5.0
    pep8-naming>=0.11.1
    flake8-builtins>=1.5.3

[testenv:publish]
basepython = python3.7
commands =
    {envpython} setup.py sdist
    {envpython} -m twine check  dist/*
    {envpython} -m twine upload dist/*
extras =
deps =
    {[testenv]deps}
    twine>=3.2.0

[coverage:run]
source =
    jt.pyjava
    tests
data_file = .tox/coverage/.coverage

[coverage:report]
exclude_lines =
    # Regexes
    # Have to re-enable the standard pragma
    pragma: no cover
    raise (AssertionError|NotImplementedError)
    if\s+(0|False)\s*:
    if\s+__name__.*\s*==\s*['"]__main__['"]\s*:
    ^\s*@unittest\.skip\(
    ^\s*@unittest\.skipIf\(sys\.platform\.startswith\("win"\)
omit =
    */jt/pyjava/_platform/__init__.py
    tests/run.py
skip_covered = False

[coverage:html]
directory = .tox/coverage/.coverage.html

[flake8]
filename = *.py,*.pyx
#include = tests
#exclude = .tox,*.egg,.git,_build,.hypothesis
max-line-length = 99
ignore = E126,E203,E221,E251,E302,E701,E702,E731,
         E122,E127,E128,E222,E272,E241,E266, E226,E704,
         D100, D101, D102, D103, D104, D400, D401, D202,
         N806, N802, N803, N801,
         I100
# (e.g. E4,W) default: E121,E123, 126, 226,E24, 704
#select = 
#select = E,W,F,N,I
output-file = .tox/lint/flake8out.txt
count = True
#show-pep8,
#show-source
#verbose
#quiet
